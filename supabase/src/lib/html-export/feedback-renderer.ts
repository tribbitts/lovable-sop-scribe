
import { SopDocument } from "@/types/sop";

export interface FeedbackOptions {
  enableSupabaseIntegration?: boolean;
  emailAddress?: string;
  companyName?: string;
  supabaseUrl?: string;
  supabaseAnonKey?: string;
}

export const generateFeedbackSection = (sopDocument: SopDocument, options: FeedbackOptions = {}) => {
  const {
    enableSupabaseIntegration = true,
    emailAddress = "feedback@sopify.com",
    companyName = "SOPify",
    supabaseUrl = "https://tdgslnywgmwrovzulvno.supabase.co",
    supabaseAnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRkZ3Nsbnl3Z213cm92enVsdm5vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDk5MzEsImV4cCI6MjA2MzQyNTkzMX0.T2rlM7e2JV_tPREEJFzeRj-BULyR2Mw32rIRFMmWAe0"
  } = options;

  const feedbackId = `feedback-${Date.now()}`;
  const sopTitle = sopDocument.title || "Untitled SOP";
  
  return `
    <div id="${feedbackId}" class="feedback-section" style="
      background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
      border-radius: 16px;
      padding: 30px;
      margin: 40px 0;
      color: white;
      border: 1px solid #3b82f6;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    ">
      <h3 style="color: #ffffff; margin-bottom: 20px; display: flex; align-items: center; gap: 10px; font-size: 1.2rem;">
        üí¨ Help Us Improve This SOP
      </h3>
      
      <p style="color: #e0e7ff; margin-bottom: 25px; line-height: 1.6;">
        Your feedback helps us create better documentation. Found an issue or have a suggestion?
      </p>

      <div class="feedback-options" style="display: flex; gap: 15px; flex-wrap: wrap; margin-bottom: 20px;">
        ${enableSupabaseIntegration ? `
        <button 
          onclick="openFeedbackForm('${sopTitle}')" 
          style="
            background: #10b981;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
          "
          onmouseover="this.style.background='#059669'" 
          onmouseout="this.style.background='#10b981'"
        >
          üìù Suggest Improvement
        </button>
        ` : ''}
        
        <a href="mailto:${emailAddress}?subject=Feedback for SOP: ${encodeURIComponent(sopTitle)}&body=I have feedback about this SOP:%0A%0A[Please describe your feedback here]%0A%0ASOP Title: ${encodeURIComponent(sopTitle)}%0ADate: ${new Date().toLocaleDateString()}" 
           style="
             background: #6366f1;
             color: white;
             text-decoration: none;
             padding: 12px 24px;
             border-radius: 8px;
             font-weight: 600;
             transition: all 0.3s;
             display: inline-flex;
             align-items: center;
             gap: 8px;
           "
           onmouseover="this.style.background='#4f46e5'" 
           onmouseout="this.style.background='#6366f1'"
        >
          üìß Email Feedback
        </a>
      </div>

      <p style="color: #cbd5e1; font-size: 0.875rem; margin: 0;">
        Generated by ${companyName} ‚Ä¢ ${new Date().toLocaleDateString()}
      </p>
    </div>

    ${enableSupabaseIntegration ? generateFeedbackModal(sopTitle, supabaseUrl, supabaseAnonKey) : ''}
  `;
};

const generateFeedbackModal = (sopTitle: string, supabaseUrl: string, supabaseAnonKey: string) => {
  return `
    <!-- Feedback Modal -->
    <div id="feedbackModal" style="
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 10000;
      align-items: center;
      justify-content: center;
    ">
      <div style="
        background: white;
        border-radius: 12px;
        padding: 30px;
        max-width: 500px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
      ">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
          <h3 style="margin: 0; color: #1f2937; font-size: 1.25rem;">üí¨ Submit Feedback</h3>
          <button onclick="closeFeedbackForm()" style="
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #6b7280;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
          ">√ó</button>
        </div>
        
        <form id="feedbackForm" onsubmit="submitFeedback(event)">
          <div style="margin-bottom: 20px;">
            <label style="display: block; margin-bottom: 8px; color: #374151; font-weight: 600;">
              Feedback Type *
            </label>
            <select name="feedback_type" required style="
              width: 100%;
              padding: 10px;
              border: 1px solid #d1d5db;
              border-radius: 6px;
              font-size: 14px;
            ">
              <option value="">Select feedback type</option>
              <option value="improvement">Suggest Improvement</option>
              <option value="error">Report Error</option>
              <option value="question">Ask Question</option>
              <option value="compliment">Compliment</option>
            </select>
          </div>

          <div style="margin-bottom: 20px;">
            <label style="display: block; margin-bottom: 8px; color: #374151; font-weight: 600;">
              Your Feedback *
            </label>
            <textarea name="feedback_content" required rows="4" placeholder="Please describe your feedback..." style="
              width: 100%;
              padding: 10px;
              border: 1px solid #d1d5db;
              border-radius: 6px;
              font-size: 14px;
              resize: vertical;
              box-sizing: border-box;
            "></textarea>
          </div>

          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px;">
            <div>
              <label style="display: block; margin-bottom: 8px; color: #374151; font-weight: 600;">
                Your Name (Optional)
              </label>
              <input type="text" name="user_name" placeholder="Your name" style="
                width: 100%;
                padding: 10px;
                border: 1px solid #d1d5db;
                border-radius: 6px;
                font-size: 14px;
                box-sizing: border-box;
              ">
            </div>
            <div>
              <label style="display: block; margin-bottom: 8px; color: #374151; font-weight: 600;">
                Your Email (Optional)
              </label>
              <input type="email" name="user_email" placeholder="your@email.com" style="
                width: 100%;
                padding: 10px;
                border: 1px solid #d1d5db;
                border-radius: 6px;
                font-size: 14px;
                box-sizing: border-box;
              ">
            </div>
          </div>

          <div style="display: flex; gap: 10px; justify-content: flex-end;">
            <button type="button" onclick="closeFeedbackForm()" style="
              background: #6b7280;
              color: white;
              border: none;
              padding: 10px 20px;
              border-radius: 6px;
              cursor: pointer;
              font-weight: 600;
            ">Cancel</button>
            <button type="submit" style="
              background: #10b981;
              color: white;
              border: none;
              padding: 10px 20px;
              border-radius: 6px;
              cursor: pointer;
              font-weight: 600;
            ">Submit Feedback</button>
          </div>
        </form>

        <div id="feedbackStatus" style="margin-top: 15px; display: none;"></div>
      </div>
    </div>

    <script>
      const SUPABASE_URL = '${supabaseUrl}';
      const SUPABASE_ANON_KEY = '${supabaseAnonKey}';
      const SOP_TITLE = '${sopTitle}';

      function openFeedbackForm(sopTitle) {
        document.getElementById('feedbackModal').style.display = 'flex';
      }

      function closeFeedbackForm() {
        document.getElementById('feedbackModal').style.display = 'none';
        document.getElementById('feedbackForm').reset();
        document.getElementById('feedbackStatus').style.display = 'none';
      }

      async function submitFeedback(event) {
        event.preventDefault();
        
        const form = event.target;
        const formData = new FormData(form);
        const submitButton = form.querySelector('button[type="submit"]');
        const statusDiv = document.getElementById('feedbackStatus');
        
        // Disable submit button
        submitButton.disabled = true;
        submitButton.textContent = 'Submitting...';
        
        try {
          const response = await fetch(SUPABASE_URL + '/functions/v1/submit-sop-feedback', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'apikey': SUPABASE_ANON_KEY,
            },
            body: JSON.stringify({
              sop_title: SOP_TITLE,
              sop_url: window.location.href,
              feedback_type: formData.get('feedback_type'),
              feedback_content: formData.get('feedback_content'),
              user_name: formData.get('user_name'),
              user_email: formData.get('user_email')
            })
          });

          const result = await response.json();

          if (response.ok) {
            statusDiv.innerHTML = '<div style="color: #10b981; font-weight: 600;">‚úÖ Thank you! Your feedback has been submitted successfully.</div>';
            statusDiv.style.display = 'block';
            form.reset();
            setTimeout(() => {
              closeFeedbackForm();
            }, 2000);
          } else {
            throw new Error(result.error || 'Failed to submit feedback');
          }
        } catch (error) {
          console.error('Error submitting feedback:', error);
          statusDiv.innerHTML = '<div style="color: #ef4444; font-weight: 600;">‚ùå Error submitting feedback. Please try again or use the email option.</div>';
          statusDiv.style.display = 'block';
        } finally {
          // Re-enable submit button
          submitButton.disabled = false;
          submitButton.textContent = 'Submit Feedback';
        }
      }

      // Close modal when clicking outside
      document.getElementById('feedbackModal').addEventListener('click', function(event) {
        if (event.target === this) {
          closeFeedbackForm();
        }
      });
    </script>
  `;
};

export const generateFeedbackScript = () => {
  return `
    <script>
      // Additional feedback utilities can be added here
      console.log('SOPify Feedback System Loaded');
    </script>
  `;
};
